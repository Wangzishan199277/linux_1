This file is my learning experience for Java and C++.
I will use "*", "**", "***", "****", "*****" to represent the importance of the words, sentences and paragraphs below.

*****About the polymorphism*****
Actually, I only remember the dynamic binding after taking the C++ course. What is dynamic binding? what is binding? I don't have a clear understanding. The Java course gives a better definition. <<****The superclass refers to the object of subclass.****>> This is very important. According to the lecture of Java course, we need to start from the memory allocation. Here I only give the conclusion.<<***First, there must be inheritance. Second, there must be overwriting. Third, The superclass refers to the object of subclass.***>> Here, I must make it clear that the reference of superclass can't use the member variable and method owned only by subclass. The inheritance build a bridge to connect these two classes. The overwriting gives the subclass more freedom to implement the method shared with superclass. Because of the shared member variable and method, the reference enjoys the freedom and plays different roles according to the needs.

****feelings about Java and C++****
The Java has given a very convenient framework for the programmer. The encapsulated class is similar to the case in C++. The memory allocation is quite different from C++. This just reminds me of the difficulty in that C++ project. The most disturbing part is the interface part and the memory allocation part. Acctually, this part inherits from the C. I realized why I feel difficult when I learn C++. I do not have the experience in coding with C. Learning C++ feels like learning two philosophy at the same time. Process oriented and object oriented are the characteristics of two men, the C++ try to combine their advantages together. I know, C++ wants to be a superman. Can I be a superman?

***keyword -- final***
member variable:  final member varibale is similar to const in C++, the value can not be changed.
method: final method can not be overwritten.
class: final class can not be inherited.

